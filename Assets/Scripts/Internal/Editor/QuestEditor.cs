using System;
using UnityEditor;
using UnityEngine;

[CustomEditor(typeof(Quest))]
public class QuestEditor : Editor
{
    Item reward = new Item();
    int itemCount = 1;
    int itemIndex = 0;

    int itemIndexToRemove = 0;

    public override void OnInspectorGUI()
    {
        DrawDefaultInspector();

        Quest quest = (Quest)target;
        if (GUILayout.Button("Complete quest"))
        {
            quest.Complete();
        }

        EditorGUILayout.Separator();

        /*Custom reward list since the autogenerated one wasn't customisable enough, and didn't
        have any way for me to see which reward was which*/
        for (int k = 0; k < quest.reward.Length; k++)
        {
            GUILayout.Label(string.Format("{0} - {2} {1}", k, quest.reward[k].item_id,
                quest.reward[k].count));
        }

        EditorGUILayout.Separator();

        reward = EditorGUILayout.ObjectField("Item", reward, typeof(Item), true) as Item;
        if (GUILayout.Button("Add reward"))
        {
            Item[] items = new Item[quest.reward.Length + 1];

            for(int k = 0; k < items.Length - 1; k++)
            {
                items[k] = quest.reward[k];
            }

            items[items.Length - 1] = reward;

            quest.reward = items;
        }

        EditorGUILayout.Space();

        itemIndexToRemove = EditorGUILayout.IntField("Item index", itemIndexToRemove);
        if (GUILayout.Button("Remove reward"))
        {
            Item[] items = new Item[quest.reward.Length - 1];
            if (itemIndexToRemove > 0) Array.Copy(quest.reward, 0, items, 0, itemIndexToRemove);

            quest.reward = items;
        }

        EditorGUILayout.Space();

        itemCount = EditorGUILayout.IntField("Item count", itemCount);
        itemIndex = EditorGUILayout.IntField("Item index", itemIndex);
        if(GUILayout.Button("Set reward item count"))
        {
            quest.reward[itemIndex].count = itemCount;
        }
    }
}
